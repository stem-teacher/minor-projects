--- src/processor.rs
+++ src/processor.rs
@@ -226,6 +226,39 @@ impl PdfProcessor {
         }
     }
     
+    /// Fix the page tree structure to ensure all pages have correct Parent pointers
+    fn fix_page_tree(&self, doc: &mut Document) -> Result<(), Error> {
+        // Get all current page IDs
+        let pages = doc.get_pages();
+        
+        // Create a new Pages dictionary
+        let pages_id = doc.new_object_id();
+        let page_refs: Vec<Object> = pages.values()
+            .map(|&(obj_id, gen)| Object::Reference((obj_id, gen)))
+            .collect();
+        
+        let pages_dict = dictionary! {
+            "Type" => Object::Name(b"Pages".to_vec()),
+            "Kids" => Object::Array(page_refs.clone()),
+            "Count" => Object::Integer(page_refs.len() as i64),
+        };
+        
+        // Add the Pages dictionary to the document
+        doc.objects.insert(pages_id, Object::Dictionary(pages_dict));
+        
+        // Update each page's Parent reference
+        for &(obj_id, gen) in pages.values() {
+            if let Ok(Object::Dictionary(dict)) = doc.get_object_mut((obj_id, gen)) {
+                dict.set("Parent", Object::Reference(pages_id));
+            }
+        }
+        
+        // Update the catalog to point to the new Pages dictionary
+        if let Ok(Object::Reference(catalog_id)) = doc.trailer.get(b"Root") {
+            if let Ok(Object::Dictionary(dict)) = doc.get_object_mut(*catalog_id) {
+                dict.set("Pages", Object::Reference(pages_id));
+            }
+        }
+        
+        Ok(())
+    }
+    
